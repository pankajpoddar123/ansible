When a task makes a change to a managed host, it reports the changed state and notifies
handlers. When a task does not need to make a change, it reports ok and does not notify handlers.
Use the changed_when keyword to control how a task reports that it has changed something on
the managed host. For example, the ansible.builtin.command module in the next example
validates the httpd configuration on a managed host.
This task validates the configuration syntax, but nothing is actually changed on the managed host.
Subsequent tasks can use the value of the httpd_config_status variable.
It normally would always report changed when it runs. To suppress that change report,
changed_when: false is set so that it only reports ok or failed.

[ansible@ansible playbook]$ cat playbook32.yml
---
- name: Specifying when a task reports changed results
  hosts: web
  tasks:
    - name: Validate httpd configuration
      ansible.builtin.shell: httpd -t
      changed_when: false
      register: httpd_config_status
[ansible@ansible playbook]$

[ansible@ansible playbook]$ ansible-playbook playbook32.yml

PLAY [Specifying when a task reports changed results] *******************************************************************************************************

TASK [Gathering Facts] **************************************************************************************************************************************
ok: [node2]
ok: [node1]

TASK [Validate httpd configuration] *************************************************************************************************************************
ok: [node1]
ok: [node2]

PLAY RECAP **************************************************************************************************************************************************
node1                      : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
node2                      : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0






